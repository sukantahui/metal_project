{"version":3,"file":"mapper.service.d.ts","sources":["mapper.service.d.ts"],"names":[],"mappings":"AAAA;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA","sourcesContent":["import { HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LogPosition } from './types/log-position';\nexport declare class NGXMapperService {\n    private httpBackend;\n    private sourceMapCache;\n    private logPositionCache;\n    constructor(httpBackend: HttpBackend);\n    private static getStackLine;\n    private static getPosition;\n    private static getTranspileLocation;\n    private static getMapFilePath;\n    private static getMapping;\n    /**\n     * does the http get request to get the source map\n     * @param sourceMapLocation\n     * @param distPosition\n     */\n    private _getSourceMap;\n    /**\n     * Returns the LogPosition for the current log\n     * If sourceMaps are enabled, it attemps to get the source map from the server, and use that to parse the file name\n     * and number of the call\n     * @param sourceMapsEnabled\n     */\n    getCallerDetails(sourceMapsEnabled: boolean): Observable<LogPosition>;\n}\n"]}