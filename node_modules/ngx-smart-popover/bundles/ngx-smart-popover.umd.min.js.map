{"version":3,"sources":["ng://ngx-smart-popover/lib/popover.placement.ts","ng://ngx-smart-popover/lib/popover-content.component.ts","ng://ngx-smart-popover/lib/popover.directive.ts","ng://ngx-smart-popover/lib/popover.module.ts"],"names":["PopoverPlacement","Bottom","BottomLeft","BottomRight","Left","Right","Top","TopLeft","TopRight","PopoverContentComponent","element","cdr","renderer","_this","this","placement","animation","closeOnClickOutside","closeOnMouseOutside","appendToBody","size","onCloseFromOutside","EventEmitter","top","left","isIn","opacity","transitionEnabled","windowWidth","window","innerWidth","windowHeight","innerHeight","onDocumentMouseDown","event","nativeElement","popover","contains","target","getElement","emit","undefined","prototype","ngAfterViewInit","listenClickFunc","listen","listenMouseFunc","listenTouchFunc","show","detectChanges","ngOnDestroy","onResize","updatePosition","p","positionElements","popoverDiv","hide","hideFromPopover","hostEl","targetEl","positionStr","positionStrParts","split","pos0","pos1","hostElPos","offset","position","targetElWidth","offsetWidth","targetElHeight","offsetHeight","effectivePlacement","getEffectivePlacement","targetElPos","shiftWidth","center","width","right","topOrBottomRight","topOrBottomLeft","shiftHeight","height","bottom","nativeEl","offsetParentBCR","elBCR","offsetParentEl","parentOffsetEl","document","clientTop","scrollTop","clientLeft","scrollLeft","boundingClientRect","getBoundingClientRect","pageYOffset","documentElement","pageXOffset","getStyle","cssProp","currentStyle","getComputedStyle","isStaticPositioned","offsetParent","hostElement","targetElement","hostElBoundingRect","desiredPlacement","overflows","Component","args","selector","template","ElementRef","ChangeDetectorRef","Renderer2","Input","ViewChild","static","HostListener","PopoverDirective","viewContainerRef","resolver","appRef","injector","popoverContentComponent","popoverOnHover","popoverDismissTimeout","onShown","onHidden","showOrHideOnClick","evt","popoverDisabled","stopImmediatePropagation","toggle","showOrHideOnTouch","showOnHover","hideOnHover","popoverCloseOnMouseOutside","ngOnChanges","changes","currentValue","createComponent","component","factory","resolveComponentFactory","componentRef","create","attachView","hostView","domElem","rootNodes","body","appendChild","removeComponent","detachView","destroy","visible","content","popoverPlacement","popoverAnimation","popoverTitle","title","popoverCloseOnClickOutside","popoverSize","subscribe","setTimeout","Directive","exportAs","ViewContainerRef","ComponentFactoryResolver","ApplicationRef","Injector","Output","type","PopoverModule","NgModule","declarations","imports","CommonModule","exports","entryComponents"],"mappings":"qVAAA,IAAAA,EAAA,WAAA,SAAAA,KASA,OAR2BA,EAAAC,OAAS,SACTD,EAAAE,WAAa,cACbF,EAAAG,YAAc,eACdH,EAAAI,KAAO,OACPJ,EAAAK,MAAQ,QACRL,EAAAM,IAAM,MACNN,EAAAO,QAAU,WACVP,EAAAQ,SAAW,YACtCR,EATA,gBC0GI,SAAAS,EAAsBC,EACAC,EACAC,GAFtB,IAAAC,EAAAC,KAAsBA,KAAAJ,QAAAA,EACAI,KAAAH,IAAAA,EACAG,KAAAF,SAAAA,EAtDNE,KAAAC,UAA8Bf,EAAiBM,IAG/CQ,KAAAE,WAAY,EACZF,KAAAG,qBAAsB,EACtBH,KAAAI,qBAAsB,EACtBJ,KAAAK,cAAe,EACfL,KAAAM,KAA+D,QAQxEN,KAAAO,mBAAqB,IAAIC,EAAAA,aACzBR,KAAAS,KAAO,IACPT,KAAAU,MAAQ,IACRV,KAAAW,MAAO,EAEPX,KAAAY,QAAU,EACVZ,KAAAa,mBAAoB,EAEpBb,KAAAc,YAAcC,OAAOC,WACrBhB,KAAAiB,aAAeF,OAAOG,YAatBlB,KAAAmB,oBAAmB,SAAIC,OACpBxB,EAAUG,EAAKH,QAAQyB,cACxBzB,GAAYG,EAAKuB,UAGlB1B,EAAQ2B,SAASH,EAAMI,SAAWzB,EAAKuB,QAAQG,aAAaF,SAASH,EAAMI,SAG/EzB,EAAKQ,mBAAmBmB,KAAKC,aAqkBrC,OArjBWhC,EAAAiC,UAAAC,gBAAP,WAAA,IAAA9B,EAAAC,KACQA,KAAKG,sBACLH,KAAK8B,gBAAkB9B,KAAKF,SAASiC,OAAO,WAAY,YAAW,SAAGX,GAAe,OAAArB,EAAKoB,oBAAoBC,MAE9GpB,KAAKI,sBACLJ,KAAKgC,gBAAkBhC,KAAKF,SAASiC,OAAO,WAAY,YAAW,SAAGX,GAAe,OAAArB,EAAKoB,oBAAoBC,MAGlHpB,KAAKiC,gBAAkBjC,KAAKF,SAASiC,OAAO,WAAY,aAAY,SAAGX,GAAe,OAAArB,EAAKoB,oBAAoBC,KAE/GpB,KAAKkC,OACLlC,KAAKH,IAAIsC,iBAGNxC,EAAAiC,UAAAQ,YAAP,WACQpC,KAAKG,qBAAuBH,KAAK8B,iBACjC9B,KAAK8B,kBAEL9B,KAAKI,qBAAuBJ,KAAKgC,iBACjChC,KAAKgC,kBAEHhC,KAAKiC,iBACPjC,KAAKiC,mBASNtC,EAAAiC,UAAAS,SADP,SACgBjB,GACZpB,KAAKc,YAAcC,OAAOC,WAC1BhB,KAAKiB,aAAeF,OAAOG,aAGxBvB,EAAAiC,UAAAU,eAAP,WAEI,GAAItC,KAAKY,QAAS,KACR2B,EAAIvC,KAAKwC,iBAAiBxC,KAAKsB,QAAQG,aAAczB,KAAKyC,WAAWpB,cAAerB,KAAKC,WAC/FD,KAAKS,IAAM8B,EAAE9B,IACbT,KAAKU,KAAO6B,EAAE7B,OAIff,EAAAiC,UAAAM,KAAP,WACI,GAAKlC,KAAKsB,SAAYtB,KAAKsB,QAAQG,aAAnC,KAIMc,EAAIvC,KAAKwC,iBAAiBxC,KAAKsB,QAAQG,aAAczB,KAAKyC,WAAWpB,cAAerB,KAAKC,WAC/FD,KAAKS,IAAM8B,EAAE9B,IACbT,KAAKU,KAAO6B,EAAE7B,KACdV,KAAKW,MAAO,EACZX,KAAKa,mBAAoB,EACzBb,KAAKY,QAAU,IAGZjB,EAAAiC,UAAAc,KAAP,WACI1C,KAAKS,KAAO,IACZT,KAAKU,MAAQ,IACbV,KAAKW,MAAO,EACZX,KAAKsB,QAAQoB,QAGV/C,EAAAiC,UAAAe,gBAAP,WACI3C,KAAKS,KAAO,IACZT,KAAKU,MAAQ,IACbV,KAAKW,MAAO,EACZX,KAAKa,mBAAoB,EACzBb,KAAKY,QAAU,GAOTjB,EAAAiC,UAAAY,iBAAV,SAA2BI,EAAqBC,EAAuBC,EAA+BzC,QAAA,IAAAA,IAAAA,GAAA,OAC5F0C,EAAmB,EAAwBC,MAAM,KACnDC,EAAOF,EAAiB,GACtBG,EAAOH,EAAiB,IAAM,SAC9BI,EAAYnD,KAAKK,cAAgBA,EAAeL,KAAKoD,OAAOR,GAAU5C,KAAKqD,SAAST,GACpFU,EAAgBT,EAASU,YACzBC,EAAiBX,EAASY,aAEhCzD,KAAK0D,mBAAqBT,EAAOjD,KAAK2D,sBAAsBV,EAAML,EAAQC,OAgCtEe,EA9BEC,EAAkB,CACpBC,OAAM,WACF,OAAOX,EAAUzC,KAAOyC,EAAUY,MAAQ,EAAIT,EAAgB,GAElE5C,KAAI,WACA,OAAOyC,EAAUzC,MAErBsD,MAAK,WACD,OAAOb,EAAUzC,KAAOyC,EAAUY,OAEtCE,iBAAgB,WACZ,OAAOd,EAAUzC,KAAOyC,EAAUY,MAAQ,GAE9CG,gBAAe,WACX,OAAOf,EAAUzC,KAAO4C,EAAiBH,EAAUY,MAAQ,IAI7DI,EAAmB,CACrBL,OAAM,WACF,OAAOX,EAAU1C,IAAM0C,EAAUiB,OAAS,EAAIZ,EAAiB,GAEnE/C,IAAG,WACC,OAAO0C,EAAU1C,KAErB4D,OAAM,WACF,OAAOlB,EAAU1C,IAAM0C,EAAUiB,SAKzC,OAAQnB,GACJ,KAAK/D,EAAiBK,MAClBqE,EAAc,CACVnD,IAAK0D,EAAYjB,KACjBxC,KAAMmD,EAAWZ,MAErB,MAEJ,KAAK/D,EAAiBI,KAClBsE,EAAc,CACVnD,IAAK0D,EAAYjB,KACjBxC,KAAMyC,EAAUzC,KAAO4C,GAE3B,MAEJ,KAAKpE,EAAiBC,OAClByE,EAAc,CACVnD,IAAK0D,EAAYlB,KACjBvC,KAAMmD,EAAWX,MAErB,MACJ,KAAKhE,EAAiBO,QAClBmE,EAAc,CACVnD,IAAK0C,EAAU1C,IAAM+C,EACrB9C,KAAMmD,EAA4B,mBAEtC,MACJ,KAAK3E,EAAiBQ,SAClBkE,EAAc,CACVnD,IAAK0C,EAAU1C,IAAM+C,EACrB9C,KAAMmD,EAA6B,oBAEvC,MACJ,KAAK3E,EAAiBE,WAClBwE,EAAc,CACVnD,IAAK0D,EAAYjF,EAAiBC,UAClCuB,KAAMmD,EAA4B,mBAEtC,MACJ,KAAK3E,EAAiBG,YAClBuE,EAAc,CACVnD,IAAK0D,EAAYjF,EAAiBC,UAClCuB,KAAMmD,EAA6B,oBAEvC,MAEJ,QACID,EAAc,CACVnD,IAAK0C,EAAU1C,IAAM+C,EACrB9C,KAAMmD,EAAWX,MAK7B,OAAOU,GAGDjE,EAAAiC,UAAAyB,SAAV,SAAmBiB,OACXC,EAAkB,CAAE9D,IAAK,EAAGC,KAAM,GAChC8D,EAAQxE,KAAKoD,OAAOkB,GACpBG,EAAiBzE,KAAK0E,eAAeJ,GACvCG,IAAmB1D,OAAO4D,YAC1BJ,EAAkBvE,KAAKoD,OAAOqB,IACdhE,KAAOgE,EAAeG,UAAYH,EAAeI,UACjEN,EAAgB7D,MAAQ+D,EAAeK,WAAaL,EAAeM,gBAGjEC,EAAqBV,EAASW,wBACpC,MAAO,CACHlB,MAAOiB,EAAmBjB,OAASO,EAASf,YAC5Ca,OAAQY,EAAmBZ,QAAUE,EAASb,aAC9ChD,IAAK+D,EAAM/D,IAAM8D,EAAgB9D,IACjCC,KAAM8D,EAAM9D,KAAO6D,EAAgB7D,OAIjCf,EAAAiC,UAAAwB,OAAV,SAAiBkB,OACPU,EAAqBV,EAASW,wBACpC,MAAO,CACHlB,MAAOiB,EAAmBjB,OAASO,EAASf,YAC5Ca,OAAQY,EAAmBZ,QAAUE,EAASb,aAC9ChD,IAAKuE,EAAmBvE,KAAOM,OAAOmE,aAAenE,OAAO4D,SAASQ,gBAAgBN,WACrFnE,KAAMsE,EAAmBtE,MAAQK,OAAOqE,aAAerE,OAAO4D,SAASQ,gBAAgBJ,cAIrFpF,EAAAiC,UAAAyD,SAAV,SAAmBf,EAAuBgB,GACtC,OAAI,EAAkBC,aACX,EAAkBA,aAAaD,GAGtCvE,OAAOyE,iBACCzE,OAAuB,iBAASuD,GAAUgB,GAI9ChB,EAAc,MAASgB,IAGzB3F,EAAAiC,UAAA6D,mBAAV,SAA6BnB,GACzB,MAA8D,YAAtDtE,KAAKqF,SAASf,EAAU,aAAe,WAGzC3E,EAAAiC,UAAA8C,eAAV,SAAyBJ,GAErB,QADIoB,EAAoBpB,EAASoB,cAAgB3E,OAAO4D,SACjDe,GAAgBA,IAAiB3E,OAAO4D,UAAY3E,KAAKyF,mBAAmBC,IAC/EA,EAAeA,EAAaA,aAEhC,OAAOA,GAAgB3E,OAAO4D,UAIxBhF,EAAAiC,UAAA+B,sBAAV,SAAgC1D,EAAmB0F,EAA0BC,OACnEC,EAAqBF,EAAYV,wBAEjCa,EAAmB7F,GAAaf,EAAiBM,IAGjDuG,EACW,CACTtF,IAAKoF,EAAmBpF,IAAMmF,EAAcnC,aAAe,EAC3DO,MAAO6B,EAAmBnF,KAAOmF,EAAmB9B,MAAQ,EAAI6B,EAAcrC,YAAc,EAAIvD,KAAKc,YACrGJ,KAAMmF,EAAmBnF,KAAOmF,EAAmB9B,MAAQ,EAAI6B,EAAcrC,YAAc,EAAI,GAJjGwC,EAMgB,CACdtF,IAAKoF,EAAmBpF,IAAMmF,EAAcnC,aAAe,EAC3DO,MAAO6B,EAAmB7B,MAAQ4B,EAAcrC,YAAcvD,KAAKc,aARrEiF,EAUa,CACXtF,IAAKoF,EAAmBpF,IAAMoF,EAAmBzB,OAAS,EAAIwB,EAAcnC,aAAe,EAAI,EAC/FO,MAAO6B,EAAmB7B,MAAQ4B,EAAcrC,YAAcvD,KAAKc,YACnEuD,OAAQwB,EAAmBpF,IAAMoF,EAAmBzB,OAAS,EAAIwB,EAAcnC,aAAe,EAAIzD,KAAKiB,cAbzG8E,EAemB,CACjB/B,MAAO6B,EAAmB7B,MAAQ4B,EAAcrC,YAAcvD,KAAKc,YACnEuD,OAAQwB,EAAmBxB,OAASuB,EAAcnC,aAAezD,KAAKiB,cAjBxE8E,EAmBc,CACZ/B,MAAO6B,EAAmBnF,KAAOmF,EAAmB9B,MAAQ,EAAI6B,EAAcrC,YAAc,EAAIvD,KAAKc,YACrGuD,OAAQwB,EAAmBxB,OAASuB,EAAcnC,aAAezD,KAAKiB,aACtEP,KAAMmF,EAAmBnF,KAAOmF,EAAmB9B,MAAQ,EAAI6B,EAAcrC,YAAc,EAAI,GAtBjGwC,EAwBkB,CAChB1B,OAAQwB,EAAmBxB,OAASuB,EAAcnC,aAAezD,KAAKiB,aACtEP,KAAMmF,EAAmBnF,KAAOkF,EAAcrC,YAAc,GA1B9DwC,EA4BY,CACVrF,KAAMmF,EAAmBnF,KAAOkF,EAAcrC,YAC9C9C,IAAKoF,EAAmBpF,IAAMoF,EAAmBzB,OAAS,EAAIwB,EAAcnC,aAAe,EAAI,EAC/FY,OAAQwB,EAAmBpF,IAAMoF,EAAmBzB,OAAS,EAAIwB,EAAcnC,aAAe,EAAIzD,KAAKiB,cA/BzG8E,EAiCe,CACbtF,IAAKoF,EAAmBpF,IAAMmF,EAAcnC,aAAe,EAC3D/C,KAAMmF,EAAmBnF,KAAOkF,EAAcrC,YAAc,GAIpE,OAAIuC,IAAqB5G,EAAiBM,IAElCuG,EAAsBtF,KAAOsF,EAAsBrF,KAC5CxB,EAAiBG,YAGjB0G,EAAsBtF,KAAOsF,EAAsB/B,MACnD9E,EAAiBE,WAGjB2G,EAAsBtF,IACtBvB,EAAiBC,OAGjB4G,EAAsB/B,MACtB9E,EAAiBO,QAGjBsG,EAAsBrF,KACtBxB,EAAiBQ,SAGjBR,EAAiBM,IAI5BsG,IAAqB5G,EAAiBQ,SAElCqG,EAA2BtF,KAAOsF,EAA2B/B,MACzD+B,EAAyB1B,OAClBnF,EAAiBI,KACjByG,EAAyB/B,MACzB9E,EAAiBE,WAEjBF,EAAiBC,OAIrB4G,EAA2BtF,IAC9BsF,EAAwBtF,IACjBvB,EAAiBG,YAEjBH,EAAiBK,MAIrBwG,EAA2B/B,MAC9B+B,EAAsB/B,MACf9E,EAAiBO,QAEjBP,EAAiBM,IAIrBN,EAAiBQ,SAI5BoG,IAAqB5G,EAAiBK,MAElCwG,EAAwB/B,OAAS+B,EAAwBtF,IACrDsF,EAA8B/B,OAAS+B,EAAyB/B,MACzD9E,EAAiBE,WACjB2G,EAA8B/B,MAC9B9E,EAAiBC,OAEjBD,EAAiBG,YAIrB0G,EAAwB/B,OAAS+B,EAAwB1B,OAC5D0B,EAA2B/B,OAAS+B,EAAsB/B,MACnD9E,EAAiBO,QACjBsG,EAA2B/B,MAC3B9E,EAAiBM,IAEjBN,EAAiBQ,SAIrBqG,EAAwB/B,MAC3B+B,EAAsBtF,IAClBsF,EAAyB/B,MAClB9E,EAAiBE,WACjB2G,EAA8B/B,MAC9B9E,EAAiBC,OAEjBD,EAAiBG,YAGxB0G,EAAsB/B,MACf9E,EAAiBO,QACjBsG,EAA2B/B,MAC3B9E,EAAiBM,IAEjBN,EAAiBQ,SAKzBqG,EAAwBtF,IACxBvB,EAAiBG,YAGjB0G,EAAwB1B,OACxBnF,EAAiBQ,SAGjBR,EAAiBK,MAI5BuG,IAAqB5G,EAAiBG,YAElC0G,EAA8B1B,QAAU0B,EAA8B/B,MAClE+B,EAAsBtF,IACfvB,EAAiBI,KACjByG,EAAsB/B,MACtB9E,EAAiBO,QAEjBP,EAAiBM,IAIrBuG,EAA8B1B,OACjC0B,EAAwB1B,OACjBnF,EAAiBQ,SAEjBR,EAAiBK,MAIrBwG,EAA8B/B,MACjC+B,EAAyB/B,MAClB9E,EAAiBE,WAEjBF,EAAiBC,OAIrBD,EAAiBG,YAI5ByG,IAAqB5G,EAAiBC,OAElC4G,EAAyB1B,QAAU0B,EAAyBrF,KACrDxB,EAAiBQ,SAGjBqG,EAAyB1B,QAAU0B,EAAyB/B,MAC5D9E,EAAiBO,QAGjBsG,EAAyB1B,OACzBnF,EAAiBM,IAGjBuG,EAAyB/B,MACzB9E,EAAiBE,WAGjB2G,EAAyBrF,KACzBxB,EAAiBG,YAGjBH,EAAiBC,OAI5B2G,IAAqB5G,EAAiBE,WAElC2G,EAA6B1B,QAAU0B,EAA6BrF,KAChEqF,EAAsBtF,IACfvB,EAAiBK,MACjBwG,EAAsBrF,KACtBxB,EAAiBQ,SAEjBR,EAAiBM,IAIrBuG,EAA6B1B,OAChC0B,EAAuB1B,OAChBnF,EAAiBO,QAEjBP,EAAiBI,KAIrByG,EAA6BrF,KAChCqF,EAAyBrF,KAClBxB,EAAiBG,YAEjBH,EAAiBC,OAIrBD,EAAiBE,WAI5B0G,IAAqB5G,EAAiBI,KAElCyG,EAAuBrF,MAAQqF,EAAuBtF,IAClDsF,EAA6BrF,MAAQqF,EAAyBrF,KACvDxB,EAAiBG,YACjB0G,EAA8B/B,MAC9B9E,EAAiBC,OAEjBD,EAAiBE,WAIrB2G,EAAuBrF,MAAQqF,EAAuB1B,OACzD0B,EAA0BrF,MAAQqF,EAAsBrF,KACjDxB,EAAiBQ,SACjBqG,EAA0BrF,KAC1BxB,EAAiBM,IAEjBN,EAAiBO,QAIrBsG,EAAuBrF,KAC1BqF,EAAsBtF,IAClBsF,EAAyBrF,KAClBxB,EAAiBG,YACjB0G,EAA6BrF,KAC7BxB,EAAiBC,OAEjBD,EAAiBE,WAGxB2G,EAAsBrF,KACfxB,EAAiBQ,SACjBqG,EAA0BrF,KAC1BxB,EAAiBM,IAEjBN,EAAiBO,QAKzBsG,EAAuBtF,IACvBvB,EAAiBE,WAGjB2G,EAAuB1B,OACvBnF,EAAiBO,QAGjBP,EAAiBI,KAI5BwG,IAAqB5G,EAAiBO,QAElCsG,EAA0BtF,KAAOsF,EAA0BrF,KACvDqF,EAAyB1B,OAClBnF,EAAiBK,MACjBwG,EAAyBrF,KACzBxB,EAAiBG,YAEjBH,EAAiBC,OAIrB4G,EAA0BtF,IAC7BsF,EAAuBtF,IAChBvB,EAAiBE,WAEjBF,EAAiBI,KAIrByG,EAA0BrF,KAC7BqF,EAAsBrF,KACfxB,EAAiBQ,SAEjBR,EAAiBM,IAIrBN,EAAiBO,QAIzBqG,uBAlpBdE,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,kBACVC,SAAU,kmCAbVC,EAAAA,kBAFAC,EAAAA,yBAMAC,EAAAA,8CAwCCC,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,2BACAA,EAAAA,yBACAA,EAAAA,mCACAA,EAAAA,mCACAA,EAAAA,4BACAA,EAAAA,oBACAA,EAAAA,0BAKAC,EAAAA,UAASP,KAAA,CAAC,aAAc,CAAEQ,UAAQ,sBA+ElCC,EAAAA,aAAYT,KAAA,CAAC,gBAAiB,CAAC,cAuhBpCtG,KC1oBAgH,EAAA,WAeI,SAAAA,EACcC,EACA/G,EACAgH,EACAC,EACFC,GAJE/G,KAAA4G,iBAAAA,EACA5G,KAAAH,IAAAA,EACAG,KAAA6G,SAAAA,EACA7G,KAAA8G,OAAAA,EACF9G,KAAA+G,SAAAA,EAZF/G,KAAAgH,wBAA0BrH,EAwBpBK,KAAAiH,gBAAiB,EAGjBjH,KAAAkH,sBAAwB,EAEvBlH,KAAAmH,QAAU,IAAI3G,EAAAA,aACdR,KAAAoH,SAAW,IAAI5G,EAAAA,aA2MpC,OArMWmG,EAAA/E,UAAAyF,kBADP,SACyBC,GACjBtH,KAAKiH,gBAGLjH,KAAKuH,kBAGTD,EAAIE,2BACJxH,KAAKyH,WAIFd,EAAA/E,UAAA8F,kBADP,SACyBJ,GACrBA,EAAIE,2BACCxH,KAAKiH,iBAGNjH,KAAKuH,iBAGTvH,KAAKyH,WAKFd,EAAA/E,UAAA+F,YAFP,WAGS3H,KAAKiH,iBAGNjH,KAAKuH,iBAGTvH,KAAKkC,SAKFyE,EAAA/E,UAAAgG,YAFP,WAGQ5H,KAAK6H,4BAGJ7H,KAAKiH,iBAGNjH,KAAKuH,iBAGTvH,KAAK0C,SAGFiE,EAAA/E,UAAAkG,YAAP,SAAmBC,GACXA,EAAyB,iBACrBA,EAAyB,gBAAEC,cAC3BhI,KAAK0C,QAKPiE,EAAA/E,UAAAqG,gBAAV,SAA0BC,OAChBC,EAAUnI,KAAK6G,SAASuB,wBAAwBF,GAGhDG,EAAerI,KAAKK,aACpB8H,EAAQG,OAAOtI,KAAK+G,UACpB/G,KAAK4G,iBAAiBqB,gBAAgBE,GAE5C,GAAInI,KAAKK,aAAc,CAEnBL,KAAK8G,OAAOyB,WAAWF,EAAaG,cAG9BC,EAAWJ,EAAqB,SACjCK,UAAU,GAGf/D,SAASgE,KAAKC,YAAYH,GAG9B,OAAOJ,GAGD1B,EAAA/E,UAAAiH,gBAAV,SAA0BR,GAClBrI,KAAKsB,UACDtB,KAAKK,cACLL,KAAK8G,OAAOgC,WAAWT,EAAaG,UAExCH,EAAaU,YAOdpC,EAAA/E,UAAA6F,OAAP,WACSzH,KAAKgJ,QAGNhJ,KAAK0C,OAFL1C,KAAKkC,QAMNyE,EAAA/E,UAAAM,KAAP,WAAA,IAAAnC,EAAAC,KACI,IAAIA,KAAKgJ,QAAT,CAKA,GADAhJ,KAAKgJ,SAAU,EACa,iBAAjBhJ,KAAKiJ,QAAsB,CAClC,IAAKjJ,KAAKgJ,QACN,OAGJhJ,KAAKsB,QAAUtB,KAAKiI,gBAAgBjI,KAAKgH,0BACnC1F,EAAUtB,KAAKsB,QAAgB,UAC7BA,QAAUtB,KAClBsB,EAAQ2H,QAAUjJ,KAAY,QAC1BA,KAAKkJ,mBAAqBvH,YAC1BL,EAAQrB,UAAYD,KAAKkJ,kBAEzBlJ,KAAKmJ,mBAAqBxH,YAC1BL,EAAQpB,UAAYF,KAAKmJ,kBAEzBnJ,KAAKoJ,eAAiBzH,YACtBL,EAAQ+H,MAAQrJ,KAAKoJ,cAErBpJ,KAAKsJ,6BAA+B3H,YACpCL,EAAQnB,oBAAsBH,KAAKsJ,4BAEnCtJ,KAAK6H,6BAA+BlG,YACpCL,EAAQlB,oBAAsBJ,KAAK6H,4BAEnC7H,KAAKuJ,cACLjI,EAAQhB,KAAON,KAAKuJ,aAGxBjI,EAAQjB,aAAeL,KAAKK,aAE5BiB,EAAQf,mBAAmBiJ,UAAS,WAAO,OAAAzJ,EAAK2C,SAE5C1C,KAAKkH,sBAAwB,GAC7BuC,WAAU,WAAO,OAAA1J,EAAK2C,QAAQ1C,KAAKkH,2BAEpC,KACG5F,GAAAA,EAAUtB,KAAY,SACpBsB,QAAUtB,KACdA,KAAKkJ,mBAAqBvH,YAC1BL,EAAQrB,UAAYD,KAAKkJ,kBAEzBlJ,KAAKmJ,mBAAqBxH,YAC1BL,EAAQpB,UAAYF,KAAKmJ,kBAEzBnJ,KAAKoJ,eAAiBzH,YACtBL,EAAQ+H,MAAQrJ,KAAKoJ,cAErBpJ,KAAKsJ,6BAA+B3H,YACpCL,EAAQnB,oBAAsBH,KAAKsJ,4BAEnCtJ,KAAK6H,6BAA+BlG,YACpCL,EAAQlB,oBAAsBJ,KAAK6H,4BAEnC7H,KAAKuJ,cACLjI,EAAQhB,KAAON,KAAKuJ,aAGxBjI,EAAQjB,aAAeL,KAAKK,aAE5BiB,EAAQf,mBAAmBiJ,UAAS,WAAO,OAAAzJ,EAAK2C,SAE5C1C,KAAKkH,sBAAwB,GAC7BuC,WAAU,WAAO,OAAA1J,EAAK2C,QAAQ1C,KAAKkH,uBAEvC5F,EAAQY,OAGZlC,KAAKH,IAAIsC,gBACTnC,KAAKmH,QAAQzF,KAAK1B,QAGf2G,EAAA/E,UAAAc,KAAP,WACS1C,KAAKgJ,UAIVhJ,KAAKgJ,SAAU,EACfhJ,KAAK6I,gBAAgB7I,KAAKsB,SAEtBtB,KAAKiJ,mBAAmBtJ,GACvBK,KAAY,QAA6B2C,kBAG9C3C,KAAKH,IAAIsC,gBACTnC,KAAKoH,SAAS1F,KAAK1B,QAGhB2G,EAAA/E,UAAAH,WAAP,WACI,OAAOzB,KAAK4G,iBAAiBhH,QAAQyB,mCA/O5CqI,EAAAA,UAASzD,KAAA,CAAC,CACPC,SAAU,YACVyD,SAAU,uDAhBVC,EAAAA,wBAVAvD,EAAAA,yBACAwD,EAAAA,gCAUAC,EAAAA,sBACAC,EAAAA,6CAsCCxD,EAAAA,MAAKN,KAAA,CAAC,gCACNM,EAAAA,+BACAA,EAAAA,gCACAA,EAAAA,gCACAA,EAAAA,4BACAA,EAAAA,8BACAA,EAAAA,0CACAA,EAAAA,0CACAA,EAAAA,qCACAA,EAAAA,4BACAA,EAAAA,uBACAyD,EAAAA,yBACAA,EAAAA,kCAKAtD,EAAAA,aAAYT,KAAA,CAAC,QAAS,CAAC,sCAYvBS,EAAAA,aAAYT,KAAA,CAAC,WAAY,CAAC,gCAY1BS,EAAAA,aAAYT,KAAA,CAAC,YAAS,CAAAgE,KACtBvD,EAAAA,aAAYT,KAAA,CAAC,mCAWbS,EAAAA,aAAYT,KAAA,CAAC,aAAU,CAAAgE,KACvBvD,EAAAA,aAAYT,KAAA,CAAC,iBAiKlBU,EAjPA,GC9BAuD,EAAA,WAKA,SAAAA,KAgB6B,2BAhB5BC,EAAAA,SAAQlE,KAAA,CAAC,CACNmE,aAAc,CACVzD,EACAhH,GAEJ0K,QAAS,CACLC,EAAAA,cAEJC,QAAS,CACL5K,EACAgH,GAEJ6D,gBAAiB,CACb7K,OAGqBuK,EArB7B","sourcesContent":["export class PopoverPlacement {\n    public static readonly Bottom = 'bottom';\n    public static readonly BottomLeft = 'bottom-left';\n    public static readonly BottomRight = 'bottom-right';\n    public static readonly Left = 'left';\n    public static readonly Right = 'right';\n    public static readonly Top = 'top';\n    public static readonly TopLeft = 'top-left';\n    public static readonly TopRight = 'top-right';\n}\n","/**\n * This is a continuation of ngx-popover\n * @Reference {github} https://github.com/pleerock/ngx-popover\n */\n\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Renderer2,\n    ViewChild,\n    HostListener\n} from '@angular/core';\nimport { PopoverDirective } from './popover.directive';\nimport { PopoverPlacement } from './popover.placement';\n\n@Component({\n    selector: 'popover-content',\n    template: `\n        <div #popoverDiv\n            class=\"bs-popover-{{ effectivePlacement }} popover-content popover {{ parentClass }}\"\n            [ngClass]=\"{\n                'sm': size === 'small',\n                'md-sm': size === 'medium-small',\n                'md': size === 'medium',\n                'lg': size === 'large',\n                'in': isIn\n            }\"\n            [style.top.px]=\"top\"\n            [style.left.px]=\"left\"\n            [style.transition]=\"(transitionEnabled ? '0.15s opacity' : '')\"\n            [style.opacity]=\"opacity\"\n            [style.display]=\"'block'\"\n            [attr.aria-hidden]=\"opacity === 0\"\n            role=\"popover\">\n                <div [hidden]=\"!closeOnMouseOutside\" class=\"virtual-area\"></div>\n                <div class=\"arrow\"></div>\n                <div class=\"popover-header\" [hidden]=\"!title\">{{ title }}</div>\n                <div class=\"popover-body\">\n                    <ng-content></ng-content>\n                    {{ content }}\n                </div>\n        </div>\n    `\n})\nexport class PopoverContentComponent implements AfterViewInit, OnDestroy {\n    // -------------------------------------------------------------------------\n    // Inputs / Outputs\n    // -------------------------------------------------------------------------\n    @Input() public content: string;\n    @Input() public placement: PopoverPlacement = PopoverPlacement.Top;\n    @Input() public title: string;\n    @Input() public parentClass: string;\n    @Input() public animation = true;\n    @Input() public closeOnClickOutside = false;\n    @Input() public closeOnMouseOutside = false;\n    @Input() public appendToBody = false;\n    @Input() public size: 'small' | 'medium-small' | 'medium' | 'large' | 'auto' = 'small';\n\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n    @ViewChild('popoverDiv', { static: true }) public popoverDiv: ElementRef;\n\n    public popover: PopoverDirective;\n    public onCloseFromOutside = new EventEmitter();\n    public top = -10000;\n    public left = -10000;\n    public isIn = false;\n    public effectivePlacement: string;\n    public opacity = 0;\n    public transitionEnabled = false;\n\n    public windowWidth = window.innerWidth;\n    public windowHeight = window.innerHeight;\n\n    public listenClickFunc: any;\n    public listenMouseFunc: any;\n    public listenTouchFunc: any;\n\n    // -------------------------------------------------------------------------\n    // Anonymous\n    // -------------------------------------------------------------------------\n\n    /**\n     * Closes dropdown if user clicks outside of this directive.\n     */\n    public onDocumentMouseDown = (event: any) => {\n        const element = this.element.nativeElement;\n        if (!element || !this.popover) {\n            return;\n        }\n        if (element.contains(event.target) || this.popover.getElement().contains(event.target)) {\n            return;\n        }\n        this.onCloseFromOutside.emit(undefined);\n    }\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(protected element: ElementRef,\n                protected cdr: ChangeDetectorRef,\n                protected renderer: Renderer2) {\n    }\n\n    // -------------------------------------------------------------------------\n    // Lifecycle callbacks\n    // -------------------------------------------------------------------------\n\n    public ngAfterViewInit(): void {\n        if (this.closeOnClickOutside) {\n            this.listenClickFunc = this.renderer.listen('document', 'mousedown', (event: any) => this.onDocumentMouseDown(event));\n        }\n        if (this.closeOnMouseOutside) {\n            this.listenMouseFunc = this.renderer.listen('document', 'mouseover', (event: any) => this.onDocumentMouseDown(event));\n        }\n        // Always close on mobile touch event outside.\n        this.listenTouchFunc = this.renderer.listen('document', 'touchstart', (event: any) => this.onDocumentMouseDown(event));\n\n        this.show();\n        this.cdr.detectChanges();\n    }\n\n    public ngOnDestroy(): void {\n        if (this.closeOnClickOutside && this.listenClickFunc) {\n            this.listenClickFunc();\n        }\n        if (this.closeOnMouseOutside && this.listenMouseFunc) {\n            this.listenMouseFunc();\n        }\n        if (!!this.listenTouchFunc) {\n            this.listenTouchFunc();\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    @HostListener('window:resize', ['$event'])\n    public onResize(event) {\n        this.windowWidth = window.innerWidth;\n        this.windowHeight = window.innerHeight;\n    }\n\n    public updatePosition(): void {\n        // if visible, reposition\n        if (this.opacity) {\n            const p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n            this.top = p.top;\n            this.left = p.left;\n        }\n    }\n\n    public show(): void {\n        if (!this.popover || !this.popover.getElement()) {\n            return;\n        }\n\n        const p = this.positionElements(this.popover.getElement(), this.popoverDiv.nativeElement, this.placement);\n        this.top = p.top;\n        this.left = p.left;\n        this.isIn = true;\n        this.transitionEnabled = true;\n        this.opacity = 1;\n    }\n\n    public hide(): void {\n        this.top = -10000;\n        this.left = -10000;\n        this.isIn = true;\n        this.popover.hide();\n    }\n\n    public hideFromPopover(): void {\n        this.top = -10000;\n        this.left = -10000;\n        this.isIn = true;\n        this.transitionEnabled = false;\n        this.opacity = 0;\n    }\n\n    // -------------------------------------------------------------------------\n    // Protected Methods\n    // -------------------------------------------------------------------------\n\n    protected positionElements(hostEl: HTMLElement, targetEl: HTMLElement, positionStr: PopoverPlacement, appendToBody: boolean = false): { top: number, left: number } {\n        const positionStrParts = (positionStr as string).split(' ');\n        let pos0 = positionStrParts[0];\n        const pos1 = positionStrParts[1] || 'center';\n        const hostElPos = this.appendToBody || appendToBody ? this.offset(hostEl) : this.position(hostEl);\n        const targetElWidth = targetEl.offsetWidth;\n        const targetElHeight = targetEl.offsetHeight;\n\n        this.effectivePlacement = pos0 = this.getEffectivePlacement(pos0, hostEl, targetEl);\n\n        const shiftWidth: any = {\n            center: function (): number {\n                return hostElPos.left + hostElPos.width / 2 - targetElWidth / 2;\n            },\n            left: function (): number {\n                return hostElPos.left;\n            },\n            right: function (): number {\n                return hostElPos.left + hostElPos.width;\n            },\n            topOrBottomRight: function (): number {\n                return hostElPos.left + hostElPos.width / 2;\n            },\n            topOrBottomLeft: function (): number {\n                return hostElPos.left - targetElWidth  + hostElPos.width / 2;\n            }\n        };\n\n        const shiftHeight: any = {\n            center: function (): number {\n                return hostElPos.top + hostElPos.height / 2 - targetElHeight / 2;\n            },\n            top: function (): number {\n                return hostElPos.top;\n            },\n            bottom: function (): number {\n                return hostElPos.top + hostElPos.height;\n            }\n        };\n\n        let targetElPos: { top: number, left: number };\n        switch (pos0) {\n            case PopoverPlacement.Right:\n                targetElPos = {\n                    top: shiftHeight[pos1](),\n                    left: shiftWidth[pos0]()\n                };\n                break;\n\n            case PopoverPlacement.Left:\n                targetElPos = {\n                    top: shiftHeight[pos1](),\n                    left: hostElPos.left - targetElWidth\n                };\n                break;\n\n            case PopoverPlacement.Bottom:\n                targetElPos = {\n                    top: shiftHeight[pos0](),\n                    left: shiftWidth[pos1]()\n                };\n                break;\n            case PopoverPlacement.TopLeft:\n                targetElPos = {\n                    top: hostElPos.top - targetElHeight,\n                    left: shiftWidth['topOrBottomLeft']()\n                };\n                break;\n            case PopoverPlacement.TopRight:\n                targetElPos = {\n                    top: hostElPos.top - targetElHeight,\n                    left: shiftWidth['topOrBottomRight']()\n                };\n                break;\n            case PopoverPlacement.BottomLeft:\n                targetElPos = {\n                    top: shiftHeight[PopoverPlacement.Bottom](),\n                    left: shiftWidth['topOrBottomLeft']()\n                };\n                break;\n            case PopoverPlacement.BottomRight:\n                targetElPos = {\n                    top: shiftHeight[PopoverPlacement.Bottom](),\n                    left: shiftWidth['topOrBottomRight']()\n                };\n                break;\n\n            default:\n                targetElPos = {\n                    top: hostElPos.top - targetElHeight,\n                    left: shiftWidth[pos1]()\n                };\n                break;\n        }\n\n        return targetElPos;\n    }\n\n    protected position(nativeEl: HTMLElement): { width: number, height: number, top: number, left: number } {\n        let offsetParentBCR = { top: 0, left: 0 };\n        const elBCR = this.offset(nativeEl);\n        const offsetParentEl = this.parentOffsetEl(nativeEl);\n        if (offsetParentEl !== window.document) {\n            offsetParentBCR = this.offset(offsetParentEl);\n            offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;\n            offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;\n        }\n\n        const boundingClientRect = nativeEl.getBoundingClientRect();\n        return {\n            width: boundingClientRect.width || nativeEl.offsetWidth,\n            height: boundingClientRect.height || nativeEl.offsetHeight,\n            top: elBCR.top - offsetParentBCR.top,\n            left: elBCR.left - offsetParentBCR.left\n        };\n    }\n\n    protected offset(nativeEl: any): { width: number, height: number, top: number, left: number } {\n        const boundingClientRect = nativeEl.getBoundingClientRect();\n        return {\n            width: boundingClientRect.width || nativeEl.offsetWidth,\n            height: boundingClientRect.height || nativeEl.offsetHeight,\n            top: boundingClientRect.top + (window.pageYOffset || window.document.documentElement.scrollTop),\n            left: boundingClientRect.left + (window.pageXOffset || window.document.documentElement.scrollLeft)\n        };\n    }\n\n    protected getStyle(nativeEl: HTMLElement, cssProp: string): string {\n        if ((nativeEl as any).currentStyle) { // IE\n            return (nativeEl as any).currentStyle[cssProp];\n        }\n\n        if (window.getComputedStyle) {\n            return (window.getComputedStyle as any)(nativeEl)[cssProp];\n        }\n\n        // finally try and get inline style\n        return (nativeEl.style as any)[cssProp];\n    }\n\n    protected isStaticPositioned(nativeEl: HTMLElement): boolean {\n        return (this.getStyle(nativeEl, 'position') || 'static' ) === 'static';\n    }\n\n    protected parentOffsetEl(nativeEl: HTMLElement): any {\n        let offsetParent: any = nativeEl.offsetParent || window.document;\n        while (offsetParent && offsetParent !== window.document && this.isStaticPositioned(offsetParent)) {\n            offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || window.document;\n    }\n\n    // Check for overflow of the viewport and reflect the position if necessary.\n    protected getEffectivePlacement(placement: string, hostElement: HTMLElement, targetElement: HTMLElement): string {\n        const hostElBoundingRect = hostElement.getBoundingClientRect();\n\n        const desiredPlacement = placement || PopoverPlacement.Top;\n\n        // Determines if a popover overflows in a direction when in a specific position.\n        const overflows = {\n            positionTop: {\n                top: hostElBoundingRect.top - targetElement.offsetHeight < 0,\n                right: hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth,\n                left: hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0\n            },\n            positionTopRight: {\n                top: hostElBoundingRect.top - targetElement.offsetHeight < 0,\n                right: hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth\n            },\n            positionRight: {\n                top: hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0,\n                right: hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth,\n                bottom: hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight\n            },\n            positionBottomRight: {\n                right: hostElBoundingRect.right + targetElement.offsetWidth > this.windowWidth,\n                bottom: hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight\n            },\n            positionBottom: {\n                right: hostElBoundingRect.left + hostElBoundingRect.width / 2 + targetElement.offsetWidth / 2 > this.windowWidth,\n                bottom: hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight,\n                left: hostElBoundingRect.left + hostElBoundingRect.width / 2 - targetElement.offsetWidth / 2 < 0\n            },\n            positionBottomLeft: {\n                bottom: hostElBoundingRect.bottom + targetElement.offsetHeight > this.windowHeight,\n                left: hostElBoundingRect.left - targetElement.offsetWidth < 0\n            },\n            positionLeft: {\n                left: hostElBoundingRect.left < targetElement.offsetWidth,\n                top: hostElBoundingRect.top + hostElBoundingRect.height / 2 - targetElement.offsetHeight / 2 < 0,\n                bottom: hostElBoundingRect.top + hostElBoundingRect.height / 2 + targetElement.offsetHeight / 2 > this.windowHeight\n            },\n            positionTopLeft: {\n                top: hostElBoundingRect.top - targetElement.offsetHeight < 0,\n                left: hostElBoundingRect.left - targetElement.offsetWidth < 0\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.Top) {\n            // If it overflows on the top AND left, go to bottom-right.\n            if (overflows.positionTop.top && overflows.positionTop.left) {\n                return PopoverPlacement.BottomRight;\n\n            // If it overflows on the top AND right, go to bottom-left.\n            } else if (overflows.positionTop.top && overflows.positionTop.right) {\n                return PopoverPlacement.BottomLeft;\n\n            // If it only overflows on the top, go to bottom.\n            } else if (overflows.positionTop.top) {\n                return PopoverPlacement.Bottom;\n\n            // If it only overflows to the right, go to top-left.\n            } else if (overflows.positionTop.right) {\n                return PopoverPlacement.TopLeft;\n\n            // If it only overflows to the left, go to top-right.\n            } else if (overflows.positionTop.left) {\n                return PopoverPlacement.TopRight;\n\n            } else {\n                return PopoverPlacement.Top;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.TopRight) {\n            // If it overflows on the top AND the right, try in the order: bottom, Bottom-left, left.\n            if (overflows.positionTopRight.top && overflows.positionTopRight.right) {\n                if (overflows.positionBottom.bottom) {\n                    return PopoverPlacement.Left;\n                } else if (overflows.positionBottom.right) {\n                    return PopoverPlacement.BottomLeft;\n                } else {\n                    return PopoverPlacement.Bottom;\n                }\n\n            // If it only overflows on the top, try in the order: right, bottom-right.\n            } else if (overflows.positionTopRight.top) {\n                if (overflows.positionRight.top) {\n                    return PopoverPlacement.BottomRight;\n                } else {\n                    return PopoverPlacement.Right;\n                }\n\n            // If it only overflows on the right, try in the order: top, top-left.\n            } else if (overflows.positionTopRight.right) {\n                if (overflows.positionTop.right) {\n                    return PopoverPlacement.TopLeft;\n                } else {\n                    return PopoverPlacement.Top;\n                }\n\n            } else {\n                return PopoverPlacement.TopRight;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.Right) {\n            // If it overflows on the right AND the top, try in the order: bottom-right, bottom, bottom-left.\n            if (overflows.positionRight.right && overflows.positionRight.top) {\n                if (overflows.positionBottomRight.right && overflows.positionBottom.right) {\n                    return PopoverPlacement.BottomLeft;\n                } else if (overflows.positionBottomRight.right) {\n                    return PopoverPlacement.Bottom;\n                } else {\n                    return PopoverPlacement.BottomRight;\n                }\n\n            // If it overflows on the right AND the bottom, try in the order: top-right, top, top-left.\n            } else if (overflows.positionRight.right && overflows.positionRight.bottom) {\n                if (overflows.positionTopRight.right && overflows.positionTop.right) {\n                    return PopoverPlacement.TopLeft;\n                } else if (overflows.positionTopRight.right) {\n                    return PopoverPlacement.Top;\n                } else {\n                    return PopoverPlacement.TopRight;\n                }\n\n            // If it only overflows on the right, try all top positions from right to left, then try all bottom positions right to left.\n            } else if (overflows.positionRight.right) {\n                if (overflows.positionTop.top) {\n                    if (overflows.positionBottom.right) {\n                        return PopoverPlacement.BottomLeft;\n                    } else if (overflows.positionBottomRight.right) {\n                        return PopoverPlacement.Bottom;\n                    } else {\n                        return PopoverPlacement.BottomRight;\n                    }\n                } else {\n                    if (overflows.positionTop.right) {\n                        return PopoverPlacement.TopLeft;\n                    } else if (overflows.positionTopRight.right) {\n                        return PopoverPlacement.Top;\n                    } else {\n                        return PopoverPlacement.TopRight;\n                    }\n                }\n\n            // If it only over flows on the top, go bottom-right.\n            } else if (overflows.positionRight.top) {\n                return PopoverPlacement.BottomRight;\n\n            // If it only overflows on the bottom, go top-right.\n            } else if (overflows.positionRight.bottom) {\n                return PopoverPlacement.TopRight;\n\n            } else {\n                return PopoverPlacement.Right;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.BottomRight) {\n            // If it overflows on the bottom AND the right, try in the order: top, top-left, left.\n            if (overflows.positionBottomRight.bottom && overflows.positionBottomRight.right) {\n                if (overflows.positionTop.top) {\n                    return PopoverPlacement.Left;\n                } else if (overflows.positionTop.right) {\n                    return PopoverPlacement.TopLeft;\n                } else {\n                    return PopoverPlacement.Top;\n                }\n\n            // If it only overflows on the bottom, try in the order: right, top-right.\n            } else if (overflows.positionBottomRight.bottom) {\n                if (overflows.positionRight.bottom) {\n                    return PopoverPlacement.TopRight;\n                } else {\n                    return PopoverPlacement.Right;\n                }\n\n            // If it only overflows on the right, try in the order: bottom, bottom-left.\n            } else if (overflows.positionBottomRight.right) {\n                if (overflows.positionBottom.right) {\n                    return PopoverPlacement.BottomLeft;\n                } else {\n                    return PopoverPlacement.Bottom;\n                }\n\n            } else {\n                return PopoverPlacement.BottomRight;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.Bottom) {\n            // If it overflows on the bottom AND left, go to top-right.\n            if (overflows.positionBottom.bottom && overflows.positionBottom.left) {\n                return PopoverPlacement.TopRight;\n\n            // If it overflows on the bottom AND right, go to top-left.\n            } else if (overflows.positionBottom.bottom && overflows.positionBottom.right) {\n                return PopoverPlacement.TopLeft;\n\n            // If it only overflows on the bottom, go to top.\n            } else if (overflows.positionBottom.bottom) {\n                return PopoverPlacement.Top;\n\n            // If it only overflows to the right, go to bottom-left.\n            } else if (overflows.positionBottom.right) {\n                return PopoverPlacement.BottomLeft;\n\n            // If it only overflows to the left, go to bottom-right.\n            } else if (overflows.positionBottom.left) {\n                return PopoverPlacement.BottomRight;\n\n            } else {\n                return PopoverPlacement.Bottom;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.BottomLeft) {\n            // If it overflows on the bottom AND the left, try in the order: top, top-right, right.\n            if (overflows.positionBottomLeft.bottom && overflows.positionBottomLeft.left) {\n                if (overflows.positionTop.top) {\n                    return PopoverPlacement.Right;\n                } else if (overflows.positionTop.left) {\n                    return PopoverPlacement.TopRight;\n                } else {\n                    return PopoverPlacement.Top;\n                }\n\n            // If it only overflows on the bottom, try in the order: left, top-left.\n            } else if (overflows.positionBottomLeft.bottom) {\n                if (overflows.positionLeft.bottom) {\n                    return PopoverPlacement.TopLeft;\n                } else {\n                    return PopoverPlacement.Left;\n                }\n\n            // If it only overflows on the left, try in the order: bottom, bottom-right.\n            } else if (overflows.positionBottomLeft.left) {\n                if (overflows.positionBottom.left) {\n                    return PopoverPlacement.BottomRight;\n                } else {\n                    return PopoverPlacement.Bottom;\n                }\n\n            } else {\n                return PopoverPlacement.BottomLeft;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.Left) {\n            // If it overflows on the left AND the top, try in the order: bottom-left, bottom, bottom-right.\n            if (overflows.positionLeft.left && overflows.positionLeft.top) {\n                if (overflows.positionBottomLeft.left && overflows.positionBottom.left) {\n                    return PopoverPlacement.BottomRight;\n                } else if (overflows.positionBottomRight.right) {\n                    return PopoverPlacement.Bottom;\n                } else {\n                    return PopoverPlacement.BottomLeft;\n                }\n\n            // If it overflows on the left AND the bottom, try in the order: top-left, top, top-right.\n            } else if (overflows.positionLeft.left && overflows.positionLeft.bottom) {\n                if (overflows.positionTopLeft.left && overflows.positionTop.left) {\n                    return PopoverPlacement.TopRight;\n                } else if (overflows.positionTopLeft.left) {\n                    return PopoverPlacement.Top;\n                } else {\n                    return PopoverPlacement.TopLeft;\n                }\n\n            // If it only overflows on the left, try all top positions from left to right, then try all bottom positions left to right.\n            } else if (overflows.positionLeft.left) {\n                if (overflows.positionTop.top) {\n                    if (overflows.positionBottom.left) {\n                        return PopoverPlacement.BottomRight;\n                    } else if (overflows.positionBottomLeft.left) {\n                        return PopoverPlacement.Bottom;\n                    } else {\n                        return PopoverPlacement.BottomLeft;\n                    }\n                } else {\n                    if (overflows.positionTop.left) {\n                        return PopoverPlacement.TopRight;\n                    } else if (overflows.positionTopLeft.left) {\n                        return PopoverPlacement.Top;\n                    } else {\n                        return PopoverPlacement.TopLeft;\n                    }\n                }\n\n            // If it only over flows on the top, go bottom-left.\n            } else if (overflows.positionLeft.top) {\n                return PopoverPlacement.BottomLeft;\n\n            // If it only overflows on the bottom, go top-left.\n            } else if (overflows.positionLeft.bottom) {\n                return PopoverPlacement.TopLeft;\n\n            } else {\n                return PopoverPlacement.Left;\n            }\n        }\n\n        if (desiredPlacement === PopoverPlacement.TopLeft) {\n            // If it overflows on the top AND the left, try in the order: bottom, Bottom-right, right.\n            if (overflows.positionTopLeft.top && overflows.positionTopLeft.left) {\n                if (overflows.positionBottom.bottom) {\n                    return PopoverPlacement.Right;\n                } else if (overflows.positionBottom.left) {\n                    return PopoverPlacement.BottomRight;\n                } else {\n                    return PopoverPlacement.Bottom;\n                }\n\n            // If it only overflows on the top, try in the order: left, bottom-left.\n            } else if (overflows.positionTopLeft.top) {\n                if (overflows.positionLeft.top) {\n                    return PopoverPlacement.BottomLeft;\n                } else {\n                    return PopoverPlacement.Left;\n                }\n\n            // If it only overflows on the left, try in the order: top, top-right.\n            } else if (overflows.positionTopLeft.left) {\n                if (overflows.positionTop.left) {\n                    return PopoverPlacement.TopRight;\n                } else {\n                    return PopoverPlacement.Top;\n                }\n\n            } else {\n                return PopoverPlacement.TopLeft;\n            }\n        }\n\n        return desiredPlacement;\n    }\n}\n","/**\n * This is a continuation of ngx-popover\n * @Reference {github} https://github.com/pleerock/ngx-popover\n */\n\nimport {\n    ChangeDetectorRef,\n    ComponentFactoryResolver,\n    ComponentRef,\n    Directive,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChange,\n    ViewContainerRef,\n    ApplicationRef,\n    Injector,\n    Type,\n    EmbeddedViewRef\n} from '@angular/core';\nimport { PopoverContentComponent } from './popover-content.component';\nimport { PopoverPlacement } from './popover.placement';\n\n\n/**\n* @group Basic Toolkit\n* @component Popover Directive\n*/\n@Directive({\n    selector: '[popover]',\n    exportAs: 'popover'\n})\nexport class PopoverDirective implements OnChanges {\n    // -------------------------------------------------------------------------\n    // Properties\n    // -------------------------------------------------------------------------\n    protected popoverContentComponent = PopoverContentComponent;\n    protected popover: ComponentRef<PopoverContentComponent>;\n    protected visible: boolean;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    constructor(\n        protected viewContainerRef: ViewContainerRef,\n        protected cdr: ChangeDetectorRef,\n        protected resolver: ComponentFactoryResolver,\n        protected appRef: ApplicationRef,\n        private injector: Injector\n    ) { }\n\n    // -------------------------------------------------------------------------\n    // Inputs / Outputs\n    // -------------------------------------------------------------------------\n    @Input('popover') public content: string | PopoverContentComponent;\n    @Input() public popoverSize: 'small' | 'medium-small' | 'medium' | 'large' | 'auto';\n    @Input() public popoverDisabled: boolean;\n    @Input() public popoverAnimation: boolean;\n    @Input() public popoverPlacement: PopoverPlacement;\n    @Input() public popoverTitle: string;\n    @Input() public popoverOnHover = true;\n    @Input() public popoverCloseOnClickOutside: boolean;\n    @Input() public popoverCloseOnMouseOutside: boolean;\n    @Input() public popoverDismissTimeout = 0;\n    @Input() public appendToBody: boolean;\n    @Output() public onShown = new EventEmitter<PopoverDirective>();\n    @Output() public onHidden = new EventEmitter<PopoverDirective>();\n\n    // -------------------------------------------------------------------------\n    // Event listeners\n    // -------------------------------------------------------------------------\n    @HostListener('click', ['$event'])\n    public showOrHideOnClick(evt: Event): void {\n        if (this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        evt.stopImmediatePropagation();\n        this.toggle();\n    }\n\n    @HostListener('touchend', ['$event'])\n    public showOrHideOnTouch(evt: Event): void {\n        evt.stopImmediatePropagation();\n        if (!this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        this.toggle();\n    }\n\n    @HostListener('focusin')\n    @HostListener('mouseenter')\n    public showOnHover(): void {\n        if (!this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        this.show();\n    }\n\n    @HostListener('focusout')\n    @HostListener('mouseleave')\n    public hideOnHover(): void {\n        if (this.popoverCloseOnMouseOutside) {\n            return; // don't do anything since we do not control this\n        }\n        if (!this.popoverOnHover) {\n            return;\n        }\n        if (this.popoverDisabled) {\n            return;\n        }\n        this.hide();\n    }\n\n    public ngOnChanges(changes: { [propertyName: string]: SimpleChange }): void {\n        if (changes['popoverDisabled']) {\n            if (changes['popoverDisabled'].currentValue) {\n                this.hide();\n            }\n        }\n    }\n\n    protected createComponent(component: Type<any>): ComponentRef<any> {\n        const factory = this.resolver.resolveComponentFactory(component);\n\n        // Create a component reference from the component\n        const componentRef = this.appendToBody\n            ? factory.create(this.injector)\n            : this.viewContainerRef.createComponent(factory);\n\n        if (this.appendToBody) {\n            // Attach component to the appRef so that it's inside the ng component tree\n            this.appRef.attachView(componentRef.hostView);\n\n            // Get DOM element from component\n            const domElem = (componentRef.hostView as EmbeddedViewRef<any>)\n                .rootNodes[0] as HTMLElement;\n\n            // Append DOM element to the body\n            document.body.appendChild(domElem);\n        }\n\n        return componentRef;\n    }\n\n    protected removeComponent(componentRef: ComponentRef<any>) {\n        if (this.popover) {\n            if (this.appendToBody) {\n                this.appRef.detachView(componentRef.hostView);\n            }\n            componentRef.destroy();\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    public toggle(): void {\n        if (!this.visible) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    }\n\n    public show(): void {\n        if (this.visible) {\n            return;\n        }\n\n        this.visible = true;\n        if (typeof this.content === 'string') {\n            if (!this.visible) {\n                return;\n            }\n\n            this.popover = this.createComponent(this.popoverContentComponent);\n            const popover = this.popover.instance as PopoverContentComponent;\n            popover.popover = this;\n            popover.content = this.content as string;\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n            if (this.popoverCloseOnClickOutside !== undefined) {\n                popover.closeOnClickOutside = this.popoverCloseOnClickOutside;\n            }\n            if (this.popoverCloseOnMouseOutside !== undefined) {\n                popover.closeOnMouseOutside = this.popoverCloseOnMouseOutside;\n            }\n            if (this.popoverSize) {\n                popover.size = this.popoverSize;\n            }\n\n            popover.appendToBody = this.appendToBody;\n\n            popover.onCloseFromOutside.subscribe(() => this.hide());\n            // if dismissTimeout option is set, then this popover will be dismissed in dismissTimeout time\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout(() => this.hide(), this.popoverDismissTimeout);\n            }\n        } else {\n            const popover = this.content as PopoverContentComponent;\n            popover.popover = this;\n            if (this.popoverPlacement !== undefined) {\n                popover.placement = this.popoverPlacement;\n            }\n            if (this.popoverAnimation !== undefined) {\n                popover.animation = this.popoverAnimation;\n            }\n            if (this.popoverTitle !== undefined) {\n                popover.title = this.popoverTitle;\n            }\n            if (this.popoverCloseOnClickOutside !== undefined) {\n                popover.closeOnClickOutside = this.popoverCloseOnClickOutside;\n            }\n            if (this.popoverCloseOnMouseOutside !== undefined) {\n                popover.closeOnMouseOutside = this.popoverCloseOnMouseOutside;\n            }\n            if (this.popoverSize) {\n                popover.size = this.popoverSize;\n            }\n\n            popover.appendToBody = this.appendToBody;\n\n            popover.onCloseFromOutside.subscribe(() => this.hide());\n            // if dismissTimeout option is set, then this popover will be dismissed in dismissTimeout time\n            if (this.popoverDismissTimeout > 0) {\n                setTimeout(() => this.hide(), this.popoverDismissTimeout);\n            }\n            popover.show();\n        }\n\n        this.cdr.detectChanges();\n        this.onShown.emit(this);\n    }\n\n    public hide(): void {\n        if (!this.visible) {\n            return;\n        }\n\n        this.visible = false;\n        this.removeComponent(this.popover);\n\n        if (this.content instanceof PopoverContentComponent) {\n            (this.content as PopoverContentComponent).hideFromPopover();\n        }\n\n        this.cdr.detectChanges();\n        this.onHidden.emit(this);\n    }\n\n    public getElement(): HTMLElement {\n        return this.viewContainerRef.element.nativeElement;\n    }\n}\n","import { PopoverDirective } from './popover.directive';\nimport { PopoverContentComponent } from './popover-content.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [\n        PopoverDirective,\n        PopoverContentComponent\n    ],\n    imports: [\n        CommonModule,\n    ],\n    exports: [\n        PopoverContentComponent,\n        PopoverDirective\n    ],\n    entryComponents: [\n        PopoverContentComponent\n    ]\n})\nexport class PopoverModule { }\n"]}