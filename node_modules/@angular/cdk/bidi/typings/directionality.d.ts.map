{"version":3,"file":"directionality.d.ts","sources":["directionality.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;AAoBA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, Optional, InjectionToken } from '@angular/core';\nexport declare type Direction = 'ltr' | 'rtl';\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n */\nexport declare const DIR_DOCUMENT: InjectionToken<Document>;\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nexport declare class Directionality {\n    readonly value: Direction;\n    readonly change: EventEmitter<void>;\n    constructor(_document?: any);\n}\n/** @docs-private */\nexport declare function DIRECTIONALITY_PROVIDER_FACTORY(parentDirectionality: any, _document: any): any;\n/** @docs-private */\nexport declare const DIRECTIONALITY_PROVIDER: {\n    provide: typeof Directionality;\n    deps: Optional[][];\n    useFactory: (parentDirectionality: any, _document: any) => any;\n};\n"]}