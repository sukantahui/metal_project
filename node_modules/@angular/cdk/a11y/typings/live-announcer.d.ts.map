{"version":3,"file":"live-announcer.d.ts","sources":["live-announcer.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;AASA;;;;;;;;;;;;;;;;AAcA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { InjectionToken, Optional, OnDestroy } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nexport declare const LIVE_ANNOUNCER_ELEMENT_TOKEN: InjectionToken<HTMLElement>;\n/** Possible politeness levels. */\nexport declare type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\nexport declare class LiveAnnouncer implements OnDestroy {\n    private _liveElement;\n    constructor(elementToken: any, platform: Platform);\n    /**\n     * Announces a message to screenreaders.\n     * @param message Message to be announced to the screenreader\n     * @param politeness The politeness of the announcer element\n     */\n    announce(message: string, politeness?: AriaLivePoliteness): void;\n    ngOnDestroy(): void;\n    private _createLiveElement();\n}\n/** @docs-private */\nexport declare function LIVE_ANNOUNCER_PROVIDER_FACTORY(parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform): LiveAnnouncer;\n/** @docs-private */\nexport declare const LIVE_ANNOUNCER_PROVIDER: {\n    provide: typeof LiveAnnouncer;\n    deps: (Optional[] | typeof Platform)[];\n    useFactory: (parentDispatcher: LiveAnnouncer, liveElement: any, platform: Platform) => LiveAnnouncer;\n};\n"]}