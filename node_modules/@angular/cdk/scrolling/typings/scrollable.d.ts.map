{"version":3,"file":"scrollable.d.ts","sources":["scrollable.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;AAeA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, OnInit, OnDestroy, NgZone, Renderer2 } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { ScrollDispatcher } from './scroll-dispatcher';\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nexport declare class Scrollable implements OnInit, OnDestroy {\n    private _elementRef;\n    private _scroll;\n    private _ngZone;\n    private _renderer;\n    private _elementScrolled;\n    private _scrollListener;\n    constructor(_elementRef: ElementRef, _scroll: ScrollDispatcher, _ngZone: NgZone, _renderer: Renderer2);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     */\n    elementScrolled(): Observable<any>;\n    getElementRef(): ElementRef;\n}\n"]}