{"version":3,"file":"overlay-container.d.ts","sources":["overlay-container.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;AAeA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Optional, OnDestroy } from '@angular/core';\n/**\n * The OverlayContainer is the container in which all overlays will load.\n * It should be provided in the root component to ensure it is properly shared.\n */\nexport declare class OverlayContainer implements OnDestroy {\n    protected _containerElement: HTMLElement;\n    ngOnDestroy(): void;\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement(): HTMLElement;\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    protected _createContainer(): void;\n}\n/** @docs-private */\nexport declare function OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer: OverlayContainer): OverlayContainer;\n/** @docs-private */\nexport declare const OVERLAY_CONTAINER_PROVIDER: {\n    provide: typeof OverlayContainer;\n    deps: Optional[][];\n    useFactory: (parentContainer: OverlayContainer) => OverlayContainer;\n};\n"]}