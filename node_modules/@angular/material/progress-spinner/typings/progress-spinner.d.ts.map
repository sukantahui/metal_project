{"version":3,"file":"progress-spinner.d.ts","sources":["progress-spinner.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;;;;;;;;;;;AASA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, Renderer2, SimpleChanges, OnChanges } from '@angular/core';\nimport { CanColor } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\n/** Possible mode for a progress spinner. */\nexport declare type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n/** @docs-private */\nexport declare class MatProgressSpinnerBase {\n    _renderer: Renderer2;\n    _elementRef: ElementRef;\n    constructor(_renderer: Renderer2, _elementRef: ElementRef);\n}\nexport declare const _MatProgressSpinnerMixinBase: (new (...args: any[]) => CanColor) & typeof MatProgressSpinnerBase;\n/**\n * <mat-progress-spinner> component.\n */\nexport declare class MatProgressSpinner extends _MatProgressSpinnerMixinBase implements CanColor, OnChanges {\n    _renderer: Renderer2;\n    _elementRef: ElementRef;\n    private _document;\n    private _value;\n    private readonly _baseSize;\n    private readonly _baseStrokeWidth;\n    private _fallbackAnimation;\n    /** The width and height of the host element. Will grow with stroke width. **/\n    _elementSize: number;\n    /** Tracks diameters of existing instances to de-dupe generated styles (default d = 100) */\n    static diameters: Set<number>;\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    diameter: number;\n    _diameter: number;\n    /** Stroke width of the progress spinner. */\n    strokeWidth: number;\n    /** Mode of the progress circle */\n    mode: ProgressSpinnerMode;\n    /** Value of the progress circle. */\n    value: number;\n    constructor(_renderer: Renderer2, _elementRef: ElementRef, platform: Platform, _document: any);\n    ngOnChanges(changes: SimpleChanges): void;\n    /** The radius of the spinner, adjusted for stroke width. */\n    readonly _circleRadius: number;\n    /** The view box of the spinner's svg element. */\n    readonly _viewBox: string;\n    /** The stroke circumference of the svg circle. */\n    readonly _strokeCircumference: number;\n    /** The dash offset of the svg circle. */\n    readonly _strokeDashOffset: number | null;\n    /** Sets the diameter and adds diameter-specific styles if necessary. */\n    private _setDiameterAndInitStyles(size);\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    private _attachStyleNode();\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    private _getAnimationText();\n}\n/**\n * <mat-spinner> component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate <mat-progress-spinner> instance.\n */\nexport declare class MatSpinner extends MatProgressSpinner {\n    constructor(renderer: Renderer2, elementRef: ElementRef, platform: Platform, document: any);\n}\n"]}