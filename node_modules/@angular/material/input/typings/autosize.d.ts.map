{"version":3,"file":"autosize.d.ts","sources":["autosize.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, AfterViewInit, DoCheck } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nexport declare class MatTextareaAutosize implements AfterViewInit, DoCheck {\n    private _elementRef;\n    private _platform;\n    /** Keep track of the previous textarea value to avoid resizing when the value hasn't changed. */\n    private _previousValue;\n    private _minRows;\n    private _maxRows;\n    minRows: number;\n    maxRows: number;\n    /** Cached height of a textarea with a single row. */\n    private _cachedLineHeight;\n    constructor(_elementRef: ElementRef, _platform: Platform);\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight(): void;\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight(): void;\n    ngAfterViewInit(): void;\n    /** Sets a style property on the textarea element. */\n    private _setTextareaStyle(property, value);\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    private _cacheTextareaLineHeight();\n    ngDoCheck(): void;\n    /** Resize the textarea to fit its content. */\n    resizeToFitContent(): void;\n}\n"]}