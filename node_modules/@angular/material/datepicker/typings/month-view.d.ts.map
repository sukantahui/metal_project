{"version":3,"file":"month-view.d.ts","sources":["month-view.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AfterContentInit, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { DateAdapter, MatDateFormats } from '@angular/material/core';\nimport { MatCalendarCell } from './calendar-body';\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\nexport declare class MatMonthView<D> implements AfterContentInit {\n    _dateAdapter: DateAdapter<D>;\n    private _dateFormats;\n    private _changeDetectorRef;\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    activeDate: D;\n    private _activeDate;\n    /** The currently selected date. */\n    selected: D | null;\n    private _selected;\n    /** A function used to filter which dates are selectable. */\n    dateFilter: (date: D) => boolean;\n    /** Emits when a new date is selected. */\n    selectedChange: EventEmitter<D | null>;\n    /** Emits when any date is selected. */\n    _userSelection: EventEmitter<void>;\n    /** The label for this month (e.g. \"January 2017\"). */\n    _monthLabel: string;\n    /** Grid of calendar cells representing the dates of the month. */\n    _weeks: MatCalendarCell[][];\n    /** The number of blank cells in the first row before the 1st of the month. */\n    _firstWeekOffset: number;\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    _selectedDate: number | null;\n    /** The date of the month that today falls on. Null if today is in another month. */\n    _todayDate: number | null;\n    /** The names of the weekdays. */\n    _weekdays: {\n        long: string;\n        narrow: string;\n    }[];\n    constructor(_dateAdapter: DateAdapter<D>, _dateFormats: MatDateFormats, _changeDetectorRef: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    /** Handles when a new date is selected. */\n    _dateSelected(date: number): void;\n    /** Initializes this month view. */\n    _init(): void;\n    /** Creates MatCalendarCells for the dates in this month. */\n    private _createWeekCells();\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private _getDateInCurrentMonth(date);\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private _hasSameMonthAndYear(d1, d2);\n}\n"]}