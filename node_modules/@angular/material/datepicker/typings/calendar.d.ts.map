{"version":3,"file":"calendar.d.ts","sources":["calendar.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuFA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { DateAdapter, MatDateFormats } from '@angular/material/core';\nimport { MatDatepickerIntl } from './datepicker-intl';\nimport { MatMonthView } from './month-view';\nimport { MatYearView } from './year-view';\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\nexport declare class MatCalendar<D> implements AfterContentInit, OnDestroy, OnChanges {\n    private _elementRef;\n    private _intl;\n    private _ngZone;\n    private _dateAdapter;\n    private _dateFormats;\n    private _intlChanges;\n    /** A date representing the period (month or year) to start the calendar in. */\n    startAt: D | null;\n    private _startAt;\n    /** Whether the calendar should be started in month or year view. */\n    startView: 'month' | 'year';\n    /** The currently selected date. */\n    selected: D | null;\n    private _selected;\n    /** The minimum selectable date. */\n    minDate: D | null;\n    private _minDate;\n    /** The maximum selectable date. */\n    maxDate: D | null;\n    private _maxDate;\n    /** A function used to filter which dates are selectable. */\n    dateFilter: (date: D) => boolean;\n    /** Emits when the currently selected date changes. */\n    selectedChange: EventEmitter<D>;\n    /** Emits when any date is selected. */\n    _userSelection: EventEmitter<void>;\n    /** Reference to the current month view component. */\n    monthView: MatMonthView<D>;\n    /** Reference to the current year view component. */\n    yearView: MatYearView<D>;\n    /** Date filter for the month and year views. */\n    _dateFilterForViews: (date: D) => boolean;\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    _activeDate: D;\n    private _clampedActiveDate;\n    /** Whether the calendar is in month view. */\n    _monthView: boolean;\n    /** The label for the current calendar view. */\n    readonly _periodButtonText: string;\n    readonly _periodButtonLabel: string;\n    /** The label for the the previous button. */\n    readonly _prevButtonLabel: string;\n    /** The label for the the next button. */\n    readonly _nextButtonLabel: string;\n    constructor(_elementRef: ElementRef, _intl: MatDatepickerIntl, _ngZone: NgZone, _dateAdapter: DateAdapter<D>, _dateFormats: MatDateFormats, changeDetectorRef: ChangeDetectorRef);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    /** Handles date selection in the month view. */\n    _dateSelected(date: D): void;\n    _userSelected(): void;\n    /** Handles month selection in the year view. */\n    _monthSelected(month: D): void;\n    /** Handles user clicks on the period label. */\n    _currentPeriodClicked(): void;\n    /** Handles user clicks on the previous button. */\n    _previousClicked(): void;\n    /** Handles user clicks on the next button. */\n    _nextClicked(): void;\n    /** Whether the previous period button is enabled. */\n    _previousEnabled(): boolean;\n    /** Whether the next period button is enabled. */\n    _nextEnabled(): boolean;\n    /** Handles keydown events on the calendar body. */\n    _handleCalendarBodyKeydown(event: KeyboardEvent): void;\n    /** Focuses the active cell after the microtask queue is empty. */\n    _focusActiveCell(): void;\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private _isSameView(date1, date2);\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    private _handleCalendarBodyKeydownInMonthView(event);\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    private _handleCalendarBodyKeydownInYearView(event);\n    /**\n     * Determine the date for the month that comes before the given month in the same column in the\n     * calendar table.\n     */\n    private _prevMonthInSameCol(date);\n    /**\n     * Determine the date for the month that comes after the given month in the same column in the\n     * calendar table.\n     */\n    private _nextMonthInSameCol(date);\n}\n"]}