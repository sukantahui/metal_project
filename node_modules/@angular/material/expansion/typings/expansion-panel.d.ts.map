{"version":3,"file":"expansion-panel.d.ts","sources":["expansion-panel.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;;;;AAEA","sourcesContent":["import { ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { CanDisable } from '@angular/material/core';\nimport { Subject } from 'rxjs/Subject';\nimport { MatAccordion } from './accordion';\nimport { AccordionItem } from './accordion-item';\n/** @docs-private */\nexport declare class MatExpansionPanelBase extends AccordionItem {\n    constructor(accordion: MatAccordion, _changeDetectorRef: ChangeDetectorRef, _uniqueSelectionDispatcher: UniqueSelectionDispatcher);\n}\nexport declare const _MatExpansionPanelMixinBase: (new (...args: any[]) => CanDisable) & typeof MatExpansionPanelBase;\n/** MatExpansionPanel's states. */\nexport declare type MatExpansionPanelState = 'expanded' | 'collapsed';\n/** Time and timing curve for expansion panel animations. */\nexport declare const EXPANSION_PANEL_ANIMATION_TIMING = \"225ms cubic-bezier(0.4,0.0,0.2,1)\";\n/**\n * <mat-expansion-panel> component.\n *\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the CdkAccordion directive attached.\n *\n * Please refer to README.md for examples on how to use it.\n */\nexport declare class MatExpansionPanel extends _MatExpansionPanelMixinBase implements CanDisable, OnChanges, OnDestroy {\n    /** Whether the toggle indicator should be hidden. */\n    hideToggle: boolean;\n    /** Stream that emits for changes in `@Input` properties. */\n    _inputChanges: Subject<SimpleChanges>;\n    constructor(accordion: MatAccordion, _changeDetectorRef: ChangeDetectorRef, _uniqueSelectionDispatcher: UniqueSelectionDispatcher);\n    /** Whether the expansion indicator should be hidden. */\n    _getHideToggle(): boolean;\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing(): boolean;\n    /** Gets the expanded state string. */\n    _getExpandedState(): MatExpansionPanelState;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n}\nexport declare class MatExpansionPanelActionRow {\n}\n"]}