{"version":3,"file":"menu-item.d.ts","sources":["menu-item.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusableOption } from '@angular/cdk/a11y';\nimport { ElementRef, OnDestroy } from '@angular/core';\nimport { CanDisable } from '@angular/material/core';\nimport { Subject } from 'rxjs/Subject';\n/** @docs-private */\nexport declare class MatMenuItemBase {\n}\nexport declare const _MatMenuItemMixinBase: (new (...args: any[]) => CanDisable) & typeof MatMenuItemBase;\n/**\n * This directive is intended to be used inside an mat-menu tag.\n * It exists mostly to set the role attribute.\n */\nexport declare class MatMenuItem extends _MatMenuItemMixinBase implements FocusableOption, CanDisable, OnDestroy {\n    private _elementRef;\n    /** Stream that emits when the menu item is hovered. */\n    hover: Subject<MatMenuItem>;\n    /** Whether the menu item is highlighted. */\n    _highlighted: boolean;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n    _triggersSubmenu: boolean;\n    constructor(_elementRef: ElementRef);\n    /** Focuses the menu item. */\n    focus(): void;\n    ngOnDestroy(): void;\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string;\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement;\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void;\n    /** Emits to the hover stream. */\n    _emitHoverEvent(): void;\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string;\n}\n"]}