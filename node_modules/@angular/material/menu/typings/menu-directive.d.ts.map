{"version":3,"file":"menu-directive.d.ts","sources":["menu-directive.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { AnimationEvent } from '@angular/animations';\nimport { Direction } from '@angular/cdk/bidi';\nimport { AfterContentInit, ElementRef, EventEmitter, InjectionToken, OnDestroy, QueryList, TemplateRef, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MatMenuItem } from './menu-item';\nimport { MatMenuPanel } from './menu-panel';\nimport { MenuPositionX, MenuPositionY } from './menu-positions';\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n    xPosition: MenuPositionX;\n    yPosition: MenuPositionY;\n    overlapTrigger: boolean;\n}\n/** Injection token to be used to override the default options for `mat-menu`. */\nexport declare const MAT_MENU_DEFAULT_OPTIONS: InjectionToken<MatMenuDefaultOptions>;\nexport declare class MatMenu implements AfterContentInit, MatMenuPanel, OnDestroy {\n    private _elementRef;\n    private _ngZone;\n    private _defaultOptions;\n    private _keyManager;\n    private _xPosition;\n    private _yPosition;\n    private _previousElevation;\n    /** Subscription to tab events on the menu panel */\n    private _tabSubscription;\n    /** Config object to be passed into the menu's ngClass */\n    _classList: {\n        [key: string]: boolean;\n    };\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter-start' | 'enter';\n    /** Parent menu of the current menu panel. */\n    parentMenu: MatMenuPanel | undefined;\n    /** Layout direction of the menu. */\n    direction: Direction;\n    /** Position of the menu in the X axis. */\n    xPosition: MenuPositionX;\n    /** Position of the menu in the Y axis. */\n    yPosition: MenuPositionY;\n    templateRef: TemplateRef<any>;\n    /** List of the items inside of a menu. */\n    items: QueryList<MatMenuItem>;\n    /** Whether the menu should overlap its trigger. */\n    overlapTrigger: boolean;\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    classList: string;\n    /** Event emitted when the menu is closed. */\n    close: EventEmitter<void | \"click\" | \"keydown\">;\n    constructor(_elementRef: ElementRef, _ngZone: NgZone, _defaultOptions: MatMenuDefaultOptions);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    /** Stream that emits whenever the hovered menu item changes. */\n    hover(): Observable<MatMenuItem>;\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent): void;\n    /**\n     * Focus the first item in the menu. This method is used by the menu trigger\n     * to focus the first item when the menu is opened by the ENTER key.\n     */\n    focusFirstItem(): void;\n    /**\n     * It's necessary to set position-based classes to ensure the menu panel animation\n     * folds out from the correct direction.\n     */\n    setPositionClasses(posX?: MenuPositionX, posY?: MenuPositionY): void;\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth: number): void;\n    /** Starts the enter animation. */\n    _startAnimation(): void;\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation(): void;\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent): void;\n}\n"]}