{"version":3,"file":"ripple.d.ts","sources":["ripple.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef, NgZone, OnChanges, SimpleChanges, OnDestroy, InjectionToken } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { RippleConfig } from './ripple-renderer';\nimport { RippleRef } from './ripple-ref';\nexport interface RippleGlobalOptions {\n    disabled?: boolean;\n    baseSpeedFactor?: number;\n}\n/** Injection token that can be used to specify the global ripple options. */\nexport declare const MAT_RIPPLE_GLOBAL_OPTIONS: InjectionToken<RippleGlobalOptions>;\nexport declare class MatRipple implements OnChanges, OnDestroy {\n    /**\n     * The element that triggers the ripple when click events are received. Defaults to the\n     * directive's host element.\n     */\n    trigger: HTMLElement | HTMLElement;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     */\n    centered: boolean;\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    disabled: boolean;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    radius: number;\n    /**\n     * If set, the normal duration of ripple animations is divided by this value. For example,\n     * setting it to 0.5 will cause the animations to take twice as long.\n     * A changed speedFactor will not modify the fade-out duration of the ripples.\n     */\n    speedFactor: number;\n    /** Custom color for ripples. */\n    color: string;\n    /** Whether foreground ripples should be visible outside the component's bounds. */\n    unbounded: boolean;\n    /** Renderer for the ripple DOM manipulations. */\n    private _rippleRenderer;\n    /** Options that are set globally for all ripples. */\n    private _globalOptions;\n    constructor(elementRef: ElementRef, ngZone: NgZone, platform: Platform, globalOptions: RippleGlobalOptions);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    /** Launches a manual ripple at the specified position. */\n    launch(x: number, y: number, config?: RippleConfig): RippleRef;\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll(): void;\n    /** Ripple configuration from the directive's input values. */\n    readonly rippleConfig: RippleConfig;\n    /** Updates the ripple renderer with the latest ripple configuration. */\n    _updateRippleRenderer(): void;\n}\n"]}