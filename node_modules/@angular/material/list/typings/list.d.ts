/**
 * @license
 * Copyright Google Inc. All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { AfterContentInit, ElementRef, QueryList, Renderer2 } from '@angular/core';
import { CanDisableRipple, MatLine } from '@angular/material/core';
/** @docs-private */
import * as ɵngcc0 from '@angular/core';
export declare class MatListBase {
}
export declare const _MatListMixinBase: (new (...args: any[]) => CanDisableRipple) & typeof MatListBase;
/** @docs-private */
export declare class MatListItemBase {
}
export declare const _MatListItemMixinBase: (new (...args: any[]) => CanDisableRipple) & typeof MatListItemBase;
/** Divider between items within a list. */
export declare class MatListDivider {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatListDivider, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatListDivider, "mat-divider", never, {}, {}, never>;
}
/** A Material Design list component. */
export declare class MatList extends _MatListMixinBase implements CanDisableRipple {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatList, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatList, "mat-list, mat-nav-list", ["matList", "matNavList"], { "disableRipple": "disableRipple"; }, {}, never, ["*"]>;
}
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * @docs-private
 */
export declare class MatListCssMatStyler {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatListCssMatStyler, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatListCssMatStyler, "mat-list", never, {}, {}, never>;
}
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * @docs-private
 */
export declare class MatNavListCssMatStyler {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatNavListCssMatStyler, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatNavListCssMatStyler, "mat-nav-list", never, {}, {}, never>;
}
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * @docs-private
 */
export declare class MatDividerCssMatStyler {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatDividerCssMatStyler, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatDividerCssMatStyler, "mat-divider", never, {}, {}, never>;
}
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * @docs-private
 */
export declare class MatListAvatarCssMatStyler {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatListAvatarCssMatStyler, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatListAvatarCssMatStyler, "[mat-list-avatar], [matListAvatar]", never, {}, {}, never>;
}
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * @docs-private
 */
export declare class MatListIconCssMatStyler {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatListIconCssMatStyler, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatListIconCssMatStyler, "[mat-list-icon], [matListIcon]", never, {}, {}, never>;
}
/**
 * Directive whose purpose is to add the mat- CSS styling to this selector.
 * @docs-private
 */
export declare class MatListSubheaderCssMatStyler {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatListSubheaderCssMatStyler, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatListSubheaderCssMatStyler, "[mat-subheader], [matSubheader]", never, {}, {}, never>;
}
/** An item within a Material Design list. */
export declare class MatListItem extends _MatListItemMixinBase implements AfterContentInit, CanDisableRipple {
    private _renderer;
    private _element;
    private _list;
    private _lineSetter;
    private _isNavList;
    _lines: QueryList<MatLine>;
    _hasAvatar: MatListAvatarCssMatStyler;
    constructor(_renderer: Renderer2, _element: ElementRef, _list: MatList, navList: MatNavListCssMatStyler);
    ngAfterContentInit(): void;
    /** Whether this list item should show a ripple effect when clicked.  */
    _isRippleDisabled(): boolean;
    _handleFocus(): void;
    _handleBlur(): void;
    /** Retrieves the DOM element of the component host. */
    _getHostElement(): HTMLElement;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatListItem, [null, null, { optional: true; }, { optional: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatListItem, "mat-list-item, a[mat-list-item]", ["matListItem"], { "disableRipple": "disableRipple"; }, {}, ["_hasAvatar", "_lines"], ["[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]", "[mat-line], [matLine]", "*"]>;
}

//# sourceMappingURL=list.d.ts.map