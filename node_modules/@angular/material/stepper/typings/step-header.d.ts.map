{"version":3,"file":"step-header.d.ts","sources":["step-header.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ChangeDetectorRef, OnDestroy, ElementRef, Renderer2 } from '@angular/core';\nimport { MatStepLabel } from './step-label';\nimport { MatStepperIntl } from './stepper-intl';\nexport declare class MatStepHeader implements OnDestroy {\n    _intl: MatStepperIntl;\n    private _focusMonitor;\n    private _element;\n    private _intlSubscription;\n    /** Icon for the given step. */\n    icon: string;\n    /** Label of the given step. */\n    label: MatStepLabel | string;\n    /** Index of the given step. */\n    index: any;\n    private _index;\n    /** Whether the given step is selected. */\n    selected: any;\n    private _selected;\n    /** Whether the given step label is active. */\n    active: any;\n    private _active;\n    /** Whether the given step is optional. */\n    optional: any;\n    private _optional;\n    constructor(_intl: MatStepperIntl, _focusMonitor: FocusMonitor, _element: ElementRef, renderer: Renderer2, changeDetectorRef: ChangeDetectorRef);\n    ngOnDestroy(): void;\n    /** Returns string label of given step if it is a text label. */\n    _stringLabel(): string | null;\n    /** Returns MatStepLabel if the label of given step is a template label. */\n    _templateLabel(): MatStepLabel | null;\n    /** Returns the host HTML element. */\n    _getHostElement(): any;\n}\n"]}