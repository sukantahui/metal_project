{"version":3,"file":"ngx-inline-edit.es5.js","sources":["~/@savantly/ngx-inline-edit/ngx-inline-edit.ts","~/@savantly/ngx-inline-edit/src/app/modules/inline-edit/inline-edit.module.ts","~/@savantly/ngx-inline-edit/src/app/modules/inline-edit/inline-input-edit/inline-input-edit.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {InlineEditModule,InlineInputEditComponent} from './public_api';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InlineInputEditComponent } from './inline-input-edit/inline-input-edit.component';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatIconModule, MatInputModule, MatFormFieldModule } from '@angular/material';\nexport class InlineEditModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatButtonModule, MatIconModule, MatInputModule, MatFormFieldModule\n  ],\n  declarations: [InlineInputEditComponent],\n  exports: [InlineInputEditComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InlineEditModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInlineEditModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInlineEditModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  Renderer,\n  forwardRef,\n  OnInit, Renderer2 } from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nexport class InlineInputEditComponent implements ControlValueAccessor, OnInit {\n/**\n * input control *\n */\ninlineEditControl: ElementRef;\n/**\n * The control label *\n */\nlabel = '';\n/**\n * Type of input control *\n */\ntype = 'text';\n/**\n * Input value required *\n */\nrequired = false;\n/**\n * Input control is disabled *\n */\ndisabled = false;\n  // Prefix the value\n   prefix: any;\n  // color of the confirm button\n   confirmColor = 'primary';\n  // color of the cancel button\n   cancelColor = 'warn';\n\n   changed: Function;\n/**\n * private value of input *\n */\nprivate _value = '';\n/**\n * value prior to editing *\n */\nprivate preValue = '';\n/**\n * We are editing *\n */\npublic editing = false;\n/**\n * Callback when the value is changing *\n */\npublic onChange: any = Function.prototype;\n/**\n * Callback when the input is accessed *\n */\npublic onTouched: any = Function.prototype;\n/**\n * @return {?}\n */\nget value(): any {\n    return this._value;\n  }\n/**\n * @param {?} v\n * @return {?}\n */\nset value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nwriteValue(value: any) {\n    if (value !== undefined) {\n      this._value = value;\n    }\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n/**\n * @param {?} fn\n * @return {?}\n */\npublic registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\ncancel($event: Event) {\n    this.value = this.preValue;\n    this.editing = false;\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nconfirm($event: Event) {\n    this.editing = false;\n    this.changed($event, this);\n  }\n/**\n * @param {?} $event\n * @return {?}\n */\nkeypress($event) {\n    if ($event.keyCode === 13) {\n      this.confirm($event);\n    }\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nedit(value) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.preValue = value;\n    this.editing = true;\n    // Set focus on the input element, but we need to give it one cycle so it is ready\n    setTimeout(_ => this.inlineEditControl.nativeElement.focus());\n  }\n/**\n * @param {?} element\n * @param {?} _renderer\n */\nconstructor(element: ElementRef,\nprivate _renderer: Renderer2) { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'inline-input-edit',\n  template: `\n    <div>\n    \t<mat-form-field>\n    \t\t<span matPrefix [innerHTML]=\"prefix\"></span>\n    \t\t<input #inlineEditControl matInput [readonly]=\"!editing\" [required]=\"required\" (keypress)=\"keypress($event)\" [name]=\"value\" [(ngModel)]=\"value\" [type]=\"type\" [placeholder]=\"label\" />\n    \t\t<span matSuffix  *ngIf=\"editing\">\n    \t\t\t<button mat-icon-button [color]=\"confirmColor\" (click)=\"confirm($event)\"><mat-icon>done</mat-icon></button>\n    \t\t\t<button mat-icon-button [color]=\"cancelColor\" (click)=\"cancel($event)\"><mat-icon>clear</mat-icon></button>\n    \t\t</span>\n    \t\t<span matSuffix  *ngIf=\"!editing\">\n    \t\t\t<button mat-icon-button [color]=\"'primary'\" (click)=\"edit(value)\"><mat-icon>mode_edit</mat-icon></button>\n    \t\t</span>\n    \t</mat-form-field>\n    </div>\n  `,\n  styles: [`\n    :host mat-form-field {\n    \twidth:100%;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InlineInputEditComponent),\n      multi: true\n    }\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'inlineEditControl': [{ type: ViewChild, args: ['inlineEditControl', ] },],\n'label': [{ type: Input },],\n'type': [{ type: Input },],\n'required': [{ type: Input },],\n'disabled': [{ type: Input },],\n'prefix': [{ type: Input },],\n'confirmColor': [{ type: Input },],\n'cancelColor': [{ type: Input },],\n'changed': [{ type: Input },],\n};\n}\n\nfunction InlineInputEditComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInlineInputEditComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInlineInputEditComponent.ctorParameters;\n/** @type {?} */\nInlineInputEditComponent.propDecorators;\n/**\n * input control *\n * @type {?}\n */\nInlineInputEditComponent.prototype.inlineEditControl;\n/**\n * The control label *\n * @type {?}\n */\nInlineInputEditComponent.prototype.label;\n/**\n * Type of input control *\n * @type {?}\n */\nInlineInputEditComponent.prototype.type;\n/**\n * Input value required *\n * @type {?}\n */\nInlineInputEditComponent.prototype.required;\n/**\n * Input control is disabled *\n * @type {?}\n */\nInlineInputEditComponent.prototype.disabled;\n/** @type {?} */\nInlineInputEditComponent.prototype.prefix;\n/** @type {?} */\nInlineInputEditComponent.prototype.confirmColor;\n/** @type {?} */\nInlineInputEditComponent.prototype.cancelColor;\n/** @type {?} */\nInlineInputEditComponent.prototype.changed;\n/**\n * private value of input *\n * @type {?}\n */\nInlineInputEditComponent.prototype._value;\n/**\n * value prior to editing *\n * @type {?}\n */\nInlineInputEditComponent.prototype.preValue;\n/**\n * We are editing *\n * @type {?}\n */\nInlineInputEditComponent.prototype.editing;\n/**\n * Callback when the value is changing *\n * @type {?}\n */\nInlineInputEditComponent.prototype.onChange;\n/**\n * Callback when the input is accessed *\n * @type {?}\n */\nInlineInputEditComponent.prototype.onTouched;\n/** @type {?} */\nInlineInputEditComponent.prototype._renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":";;;;AESA;;;;;IAmIA,kCAvCG,OAAoB,EAAoB,SAAW;QAAX,IAA3C,CAAA,SAA2C,GAAA,SAAA,CAAW;;;;QApFtD,IAAA,CAAA,KAAI,GAAA,EAAA,CAAA;;;;QAIJ,IAAA,CAAA,IAFI,GAAA,MAAA,CAAA;;;;QAMJ,IAAA,CAAA,QAJI,GAAA,KAAA,CAAA;;;;QAQJ,IAAA,CAAA,QANI,GAAA,KAAA,CAAA;;QAUD,IAAH,CAAA,YAAe,GANG,SAAA,CAAU;;QAQzB,IAAH,CAAA,WAAc,GANG,MAAA,CAAO;;;;QAKrB,IAAH,CAAA,MAAG,GAAA,EAAA,CAAA;;;;QAEA,IAAH,CAAA,QAAG,GAAA,EAAA,CAAA;;;;QAEA,IAAH,CAAA,OAAG,GAAA,KAAA,CAAA;;;;QAEA,IAAH,CAAA,QAAG,GAAA,QAAA,CAAA,SAAA,CAAA;;;;QAEA,IAAH,CAAA,SAAG,GAAA,QAAA,CAAA,SAAA,CAAA;IA2DH,CAAgE;IAxChE,sBAjBG,2CAAA;;;;aAiBH;YACI,MAAJ,CAjBW,IAAA,CAAK,MAAC,CAAM;QAkBvB,CAAG;;;;;aAKH,UApBG,CAAA;YAqBC,EAAJ,CAAA,CAAQ,CApBC,KAAK,IAAA,CAAK,MAAC,CAoBpB,CApB2B,CAoB3B;gBACM,IAAI,CApBC,MAAC,GAAQ,CAAA,CAAE;gBAqBhB,IAAI,CApBC,QAAC,CAAQ,CAAC,CAAC,CAAC;YAqBvB,CAAK;QACL,CAAG;;;OAVA;;;;;IAeH,6CAtBG,GAsBH,UAtBG,KAAA;QAuBC,EAAJ,CAAA,CAAQ,KAtBC,KAAS,SAAA,CAsBlB,CAtB6B,CAsB7B;YACM,IAAI,CAtBC,MAAC,GAAQ,KAAA,CAAM;QAuB1B,CAAK;IACL,CAAG;;;;;IAnBA,mDAAA,GAAA,UAAA,EAAA;QAyBC,IAAI,CAxBC,QAAC,GAAU,EAAA,CAAG;IAyBvB,CAAG;;;;;IArBA,oDAAA,GAAA,UAAA,EAAA;QA2BC,IAAI,CA1BC,SAAC,GAAW,EAAA,CAAG;IA2BxB,CAAG;;;;;IAKH,yCA7BG,GA6BH,UA7BG,MAAA;QA8BC,IAAI,CA7BC,KAAC,GAAO,IAAA,CAAK,QAAC,CAAQ;QA8B3B,IAAI,CA7BC,OAAC,GAAS,KAAA,CAAM;IA8BzB,CAAG;;;;;IAKH,0CAhCG,GAgCH,UAhCG,MAAA;QAiCC,IAAI,CAhCC,OAAC,GAAS,KAAA,CAAM;QAiCrB,IAAI,CAhCC,OAAC,CAAO,MAAC,EAAO,IAAA,CAAK,CAAC;IAiC/B,CAAG;;;;;IAKH,2CAnCG,GAmCH,UAnCG,MAAA;QAoCC,EAAJ,CAAA,CAAQ,MAnCC,CAAM,OAAC,KAAW,EAAA,CAmC3B,CAnC+B,CAmC/B;YACM,IAAI,CAnCC,OAAC,CAAO,MAAC,CAAM,CAAC;QAoC3B,CAAK;IACL,CAAG;;;;;IAKH,uCArCG,GAqCH,UArCG,KAAA;QAqCH,iBASG;QARC,EAAJ,CAAA,CAAQ,IArCC,CAAI,QAAC,CAqCd,CArCuB,CAqCvB;YACM,MAAN,CAAa;QACb,CAAK;QAED,IAAI,CArCC,QAAC,GAAU,KAAA,CAAM;QAsCtB,IAAI,CArCC,OAAC,GAAS,IAAA,CAAK;;QAuCpB,UAAU,CArCC,UAAA,CAAC,IAAI,OAAA,KAAA,CAAK,iBAAC,CAAiB,aAAC,CAAa,KAAC,EAAK,EAA3C,CAA2C,CAAE,CAAC;IAsClE,CAAG;;;;IAUH,2CA1CG,GA0CH;IACA,CAAG;;CAzIH;AAiGO,wBAAP,CAAA,UAAO,GAAoC;IA2C3C,EA1CE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBA2CvB,QAAQ,EA1CE,mBAAA;gBA2CV,QAAQ,EA1CE,+zBAwDT;gBACD,MAAM,EA1CE,CAAA,4DA8CP,CA1CC;gBA2CF,SAAS,EA1CE;oBA2CT;wBACE,OAAO,EA1CE,iBAAA;wBA2CT,WAAW,EA1CE,UAAA,CAAW,cAAM,OAAA,wBAAA,EAAA,CAAA,CAAyB;wBA2CvD,KAAK,EA1CE,IAAA;qBA2CR;iBACF;aACF,EA1CC,EAAG;CA2CJ,CA1CC;;;;AAED,wBAAD,CAAA,cAAC,GAAA,cAAA,OAAA;IA6CD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,SAAS,GAAG;CAClB,EA/CA,CA+CA,CAAC;AA3CK,wBAAP,CAAA,cAAO,GAAyD;IA6ChE,mBAAmB,EA5CE,CAAA,EAAG,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA,mBAAE,EAAmB,EAAG,EAAE;IA6CzE,OAAO,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6C1B,MAAM,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6CzB,UAAU,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6C7B,UAAU,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6C7B,QAAQ,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6C3B,cAAc,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6CjC,aAAa,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IA6ChC,SAAS,EA5CE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CA6C3B,CA5CC;ADpJF;IAAA;;;CAAA;AAEuC,gBAAvC,CAAA,UAAuC,GAAoC;IAD3E,EAEE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBADtB,OAAO,EAEE;oBADP,YAAY;oBACZ,WAAW;oBACX,eAAe,EAEE,aAAA,EAAe,cAAA,EAAgB,kBAAA;iBADjD;gBACD,YAAY,EAEE,CAAA,wBAAE,CAAwB;gBADxC,OAAO,EAEE,CAAA,wBAAE,CAAwB;aADpC,EAEC,EAAG;CADJ,CAEC;;;;AAED,gBAAD,CAAA,cAAC,GAAA,cAAA,OAAA,EACA,EADA,CACA,CAAC;ADpBF;;GAEG;"}
